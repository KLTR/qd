stages:
  - build
  - deployment
  - cleanup

variables:
  PROJECT: quantum-ui
  QD_GO_ROOT: /home/gitlab-runner/src
  PROJECT_ROOT_PATH: ${QD_GO_ROOT}/sr-rnd-00.swg.local/go/client/quantum/quantum-ui
  MAKEFILE_PROJECT_PATH: ${QD_GO_ROOT}/sr-rnd-00.swg.local/go/makefile
  DOCKER_CANONICAL_IMAGE: sr-rnd-105.swg.local:5000/go-client-quantum-ui:${CI_COMMIT_REF_NAME}
  deploy_to_dev: "curl --request POST -F ref=${CI_COMMIT_REF_NAME} -F token=622bd3e8e8c49b91c9400d24284de6  https://sr-rnd-00.swg.local/api/v4/projects/205/trigger/pipeline"
  DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_NAME}

  
.limit_branches: &limit_branches
  only:
    refs:
    - develop
    - master
    - tags

build-project:
  stage: build
  script:
  - set -x && cd ${MAKEFILE_PROJECT_PATH} && git fetch && git checkout ${CI_COMMIT_REF_NAME} && git pull
  - set -x && cd ${PROJECT_ROOT_PATH} && make gitlab-pipeline-reset-all-projects
  - set -x && cd ${PROJECT_ROOT_PATH} && make ${PROJECT}
  - set -x && docker push ${DOCKER_CANONICAL_IMAGE}
  <<: *limit_branches

#deploy-to-dev:
#  stage: deployment
#  script:
#  - set -x && ${deploy_to_dev}
#  <<: *limit_branches
  
cleanup:
  stage: cleanup
  script:
  - docker rmi $(docker images -f "dangling=true" -q) || true
  allow_failure: true
  when: always
  <<: *limit_branches
